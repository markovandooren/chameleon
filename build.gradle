apply plugin: 'java-library'
apply plugin: 'eclipse'

repositories {
  mavenCentral()
}

configurations {
  plantuml
}
dependencies {
  plantuml 'net.sourceforge.plantuml:plantuml:8020'
}

def docSrc = 'build/tmp/src_for_doc'
def eclipsePlugin = 'org/aikodi/chameleon/eclipse/**'

sourceSets {
  main {
        java {
            srcDir 'src'
            exclude eclipsePlugin
       }
  }
  test {
        java {
            srcDir 'testsrc'
        }
  }
  dok {
        java {
            srcDir docSrc
            //exclude eclipsePlugin
       }
  }
}

dependencies {
  api group: 'junit', name: 'junit', version: '4.+'
  api project(':rejuse')
  api group: 'org.antlr', name: 'antlr', version: '3.2'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.6'
  implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6'
}

task javadoc(type: Javadoc, overwrite: true) {
    source = sourceSets.dok.java
}

ant.importBuild 'doc.xml'

task copyCode(type:Copy) {
  from sourceSets.main.java
  into docSrc
  include '**'
}

task copyDiagrams(type:Copy) {
  from docSrc
  into 'build/docs/javadoc'
  include '**/*.svg'
  filter { String line ->
    line.replaceAll(/(xlink:href=\S*)/, {it[0]+ / target="_parent"/})
  }
}

task runPlantUML(type: JavaExec) {
  mainClass = 'net.sourceforge.plantuml.Run'
  classpath configurations.plantuml
  jvmArgs '-Dplantuml.include.path=src'
  args '-tsvg', '-config', '"./plantuml.skin"', "${docSrc}/**"
}

task diagrams 

javadoc.dependsOn diagrams
javadoc.dependsOn prepareSourceForJavadoc
prepareSourceForJavadoc.dependsOn copyCode
diagrams.dependsOn copyDiagrams
copyDiagrams.dependsOn runPlantUML
runPlantUML.dependsOn copyCode

configurations {
  deployerJars
}

dependencies {
   deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

//uploadArchives {
//    repositories.mavenDeployer {
//        configuration = configurations.deployerJars
//        repository(url: "scp://webssh.ugent.be/users/m/mcvdoore/WWW/repository/") {
//            authentication(userName: "mcvdoore")
//        }
//        pom.version = '1.2.21'
//        pom.groupId = 'markovandooren'
//        pom.artifactId = 'chameleon'
//    }
//}

task copyRuntimeLibs(type: Copy) {
    into "lib"
    from configurations.runtimeOnly
}
